#!/usr/bin/env ruby
# frozen_string_literal: true

# Adapted from: https://github.com/thisredone/rb

if ARGV.empty?
  puts <<~'TXT'
    EXAMPLE USAGE:

      # `self` is entire input, no `puts` by default
      cat whatever.csv | rb 'puts lines.size'

      # Per-line mode. Basically: $stdin.each_line { puts line.instance_eval(ARGV) }
      cat whatever.csv | rb -l 'split(",").join("\t")' > whatever.tsv
  TXT
  return
end

File.join(Dir.home, '.rbrc').tap { |f| load f if File.exist?(f) }

def execute(itself, code)
  itself.instance_eval(&code)
rescue Errno::EPIPE
  abort
end

per_line_mode = (ARGV.first == '-l' ? !!ARGV.shift : false)
code = eval("Proc.new { #{ARGV.join(' ')} }")
if per_line_mode
  $stdin.each_line { |l| puts execute(l.chomp, code) }
else
  execute($stdin.read, code)
end
